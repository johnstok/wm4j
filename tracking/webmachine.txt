# Mandatory

## Fully implement state machine:
* [ ] Decision B2
* [x] PUT on existing resource -> P11
* [ ] Positive path for M7 & N5 -> N11, etc.
* [ ] Fix delete path around M20
* [ ] Conflict handling O14
* [ ] Multiple representations O18
* [ ] Responses with no entity O20
* [ ] Redirect N11
* [ ] New resource P11

## Conneg
  * [x] header specified; resource specified -> Conneg, header
  * [x] header unspecified; resource specified -> No conneg, header
  * [x] header specified; resource unspecified -> No conneg, no header // How does WM handle this?
  * [x] neither specified -> No conneg, no header
  * [x] Consistent API
  * [ ] Consistent Javadoc
  * [ ] Consistent implementation
  * [ ] Missing tests for parser
  * [ ] Missing tests for negotiator
  * [ ] Media type selection based on params (e.g. 'text/html;level=1')
  * [ ] Setting of 'Vary' header following negotiations (decision G07). Think this can be hard-coded?
  
## Bindings
   * Servlet API
   * Simple HTTP
   * Extract common code to abstract base class.
  
Enhanced error handling.

Improve Request,Response,Resource APIs.

Setting of 'Cache-Control' header.

Implementation of Path object's methods.

Support for multiple headers with the same key.


# Enhancement

Support for request with Content-Encoding header, incl 415 response (see rfc-2616#14.11).

Request/response Logging.

Range support.

# GZip compression
  * for 'Content-Encoding' header
  * ETag support
  * 'Compressable' resource base class.

Cookies? (See RFC)

Content-Disposition? (See RFC)

Support for 'Authorization' header.

Improved 503 support: 'Retry-After' and configurable entity body.

Easy to test each method on a resource e.g. isWellFormed()

## Bindings
   * Grizzly
   * Finagle


# Ideas
  * HTML5 canvas version of HTTP flow chart
  * Support for performance features recommended via YSlow & PageSpeed
  * URI templating library
  * Ideas from HTML5 boilerplate lib
